AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Handle events from the s3 bucket when an image is added
Parameters:
  SLUG:
    Type: String
    Description: The name appended to resources to enable separate stacks for feature
      branches
  EnvironmentSuffix:
    Description: A name appended to resources to enable separte stacks per environment.
    Type: String
  Environment:
    Description: The environment to use for configuration of the application.
    Type: String
  Project:
    Description: The project name.
    Type: String
Conditions:
  IsMaster:
    Fn::Equals:
    - Ref: SLUG
    - main
Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${Project}-${EnvironmentSuffix}-${SLUG}
      RetentionInDays: 14
  Function:
    Type: AWS::Serverless::Function
    DependsOn: LogGroup
    Properties:
      FunctionName:
        Fn::Sub: ${Project}-${EnvironmentSuffix}-${SLUG}
      CodeUri: s3://a4bird-memories-lambda-repo/a4bird-memories-image-ingestor/1.0.0.3/db4fe9f5117f91248a0e64e947be0cf0
      Handler: Memories.Image.Ingestor.Lambda::Memories.Image.Ingestor.Lambda.Function::Execute
      Runtime: dotnetcore3.1
      Timeout: 180
      ReservedConcurrentExecutions: 1
      Role:
        Fn::GetAtt:
        - FunctionRole
        - Arn
      Environment:
        Variables:
          Environment:
            Ref: Environment
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${Project}-${EnvironmentSuffix}-${SLUG}-role
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
      - PolicyName: lambda-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Sid: DynamoDBTableAccess
            Action:
            - dynamodb:GetRecords
            - dynamodb:DescribeTable
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            Resource: arn:aws:dynamodb:*:*:*
          - Effect: Allow
            Sid: SqsAccess
            Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            Resource: arn:aws:sqs:*:*:*
  SQSEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Fn::GetAtt:
        - Function
        - Arn
      EventSourceArn: arn:aws:sqs:ap-southeast-2:989464300156:memories-album-ingest-photos-test
      MaximumBatchingWindowInSeconds: 10
